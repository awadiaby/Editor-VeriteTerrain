Intent,ALGOL 68,C++
Define a constant,int x=888;,1=const int x = 888;
Initialise a variable,int x:=888;,1=int x = 888;
Assign a value 888 to a variable x,x:=888;,1=x = 888;
Compare two values,if x = 888 then ... fi,1=if (x == 888) { ...  
Allocate a variable from the heap,ref int x = heap int; or simply: heap int x;,1=int* x = new int;
Compare address of two pointers,"ref int x, y; if x :=: y then ... fi",1=int* x; int* y; 1=if (x == y) { ...  
Compare value referenced by two pointers,"ref int x, y; if x = y then ... fi",1=int* x; int* y; 1=if (*x == *y) { ...  
Name a new type,mode longreal = long real;,1=typedef double longreal; or (as of C++11): 1=using longreal = double;
Name a new record type,"mode cust = struct(string name, address);","1=struct cust { std::string name, address; ; "
Name a new union type,"mode taggedu = union(string s, real r);",1=union u { std::string s; float f; ; 
Name a procedure or function,proc f = (real x) real: ( code; result );,1=float f(float x) { code; return result;  
Procedure default parameters,(real x):x|888); code );,1=void p(float x=888) { code;  
Name a new operator,"op ? = (real x,y) real: x**y;",
Set priority on a new operator,prio ? = 9;,
Chain variables assignment,a:=b:=c:=d;,1=a = b = c = d;
Displacement operator - ALGOL 68C only,a:=:=b:=:=c:=:=d;,1=a = b; b = c; c = d;
Append "substr" to a variable str,str +:= "substr";,1=str += "substr";
Prefix "substr" to a variable str,"substr" +=: str;,1=str = "substr" + str;
