,8 bit (byte),,16 bit (short integer),,32 bit,,64 bit (long integer),,Word size,,Arbitrarily precise (bignum)
,Signed,Unsigned,Signed,Unsigned,Signed,Unsigned,Signed,Unsigned,Signed,Unsigned,
Ada[1],range -2**7 .. 2**7 - 1Ada_range[j],range 0 .. 2**8 - 1Ada_range[j] or mod 2**8Ada_mod[k],range -2**15 .. 2**15 - 1Ada_range[j],range 0 .. 2**16 - 1Ada_range[j] or mod 2**16Ada_mod[k],range -2**31 .. 2**31 - 1Ada_range[j],range 0 .. 2**32 - 1Ada_range[j] or mod 2**32Ada_mod[k],range -2**63 .. 2**63 - 1Ada_range[j],mod 2**64Ada_mod[k],IntegerAda_range[j],range 0 .. 2**Integer'<wbr/>Size - 1Ada_range[j] or mod Integer'<wbr/>SizeAda_mod[k],
ALGOL 68 (variable-width),short short intCInt[c],rowspan=2 ,short intCInt[c],rowspan=2 ,intCInt[c],rowspan=2 ,long intCInt[c],rowspan=2 ,intCInt[c],,long long int a68[a]a68g[g]
,,bytes & bits,,,,,,,,,
C (C99 fixed-width),int8_t,uint8_t,int16_t,uint16_t,int32_t,uint32_t,int64_t,uint64_t,intptr_tCInt[c],size_tCInt[c],rowspan=5 
C++ (C++11 fixed-width),,,,,,,,,,,
C (C99 variable-width),signed char,unsigned char,shortCInt[c],unsigned shortCInt[c],longCInt[c],unsigned longCInt[c],long longCInt[c],unsigned long longCInt[c],intCInt[c],unsigned intCInt[c],
C++ (C++11 variable-width),,,,,,,,,,,
Objective-C (Cocoa),signed char or int8_t,unsigned char or uint8_t,short or int16_t,unsigned short or uint16_t,int or int32_t,unsigned int or uint32_t,long long or int64_t,unsigned long long or uint64_t,NSInteger or long,NSUInteger or unsigned long,
C#,sbyte,byte,short,ushort,int,uint,long,ulong,IntPtr,UIntPtr,System.Numerics<wbr/>.BigInteger (.NET 4.0)
Java,byte,,,charJava char[b],,,,,,,java.math<wbr/>.BigInteger
Go,int8,uint8 or byte,int16,uint16,int32,uint32,int64,uint64,int,uint,big.Int
Rust,i8,u8,i16,u16,i32,u32,i64,u64,isize,usize,
Swift,Int8,UInt8,Int16,UInt16,Int32,UInt32,Int64,UInt64,Int,UInt,
D,byte,ubyte,short,ushort,int,uint,long,ulong,,,BigInt
Common Lisp[2],(signed-byte 8),(unsigned-byte 8),(signed-byte 16),(unsigned-byte 16),(signed-byte 32),(unsigned-byte 32),(signed-byte 64),(unsigned-byte 64),,,bignum
Scheme,,,,,,,,,,,
ISLISP[3],,,,,,,,,,,bignum
Pascal (FPC),shortint,byte,smallint,word,longint,longword,int64,qword,integer,cardinal,
Visual Basic,,Byte,Integer,,Long,,colspan=2 ,rowspan=2 colspan=2 ,rowspan=1 ,,
Visual Basic .NET,SByte,,Short,UShort,Integer,UInteger,Long,ULong,System.Numerics<wbr/>.BigInteger (.NET 4.0),,
FreeBasic,Byte or Integer<8>,UByte or UInteger<8>,Short or Integer<16>,UShort or UInteger<16>,Long or Integer<32>,ULong or UInteger<32>,LongInt or Integer<64>,ULongInt or UInteger<64>,Integer,UInteger,
Python 2.x,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,int,,long,,,,
Python 3.x,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,int,,,,,
S-Lang,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,,,,,,
Fortran,INTEGER<wbr/>(KIND = n)Kinds[f],,INTEGER<wbr/>(KIND = n)Kinds[f],,INTEGER<wbr/>(KIND = n)Kinds[f],,INTEGER<wbr/>(KIND = n)Kinds[f],,,,
PHP,colspan=2 ,colspan=2 ,int PHP 32/64 bit long[m],,int PHP 32/64 bit long[m],,colspan=2 ,PHP bignum[e],,,
Perl 5,colspan=2 scalars[d],colspan=2 scalars[d],colspan=2 scalars[d],colspan=2 scalars[d],colspan=2 scalars[d],Math::BigInt,,,,,
Raku,int8,uint8,int16,uint16,int32,uint32,int64,uint64,Int,colspan=2 ,
Ruby,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,Fixnum,,Bignum,,,,
ErlangErlang_int[n],colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,integer(),,integer()Erlang_arb[o],,,,
Scala,Byte,,Short,CharScala Char[l],Int,,Long,,,,scala.math.BigInt
Seed7,,,,,,,integer,,,,bigInteger
Smalltalk,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,SmallIntegerSmalltalk[i],,LargeIntegerSmalltalk[i],,,,
Windows PowerShell,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,,,,,,
OCaml,colspan=2 ,colspan=2 ,int32,,int64,,int or nativeint,,open Big_int;; big_int,,
F#,sbyte,byte,int16,uint16,,int32 or int,uint32,uint64,nativeint,unativeint,bigint
Standard ML,,Word8.word,colspan=2 ,Int32.int,Word32.word,Int64.int,Word64.word,int,word,LargeInt.int or IntInf.int,
Haskell (GHC),«import Int» Int8,«import Word» Word8,«import Int» Int16,«import Word» Word16,«import Int» Int32,«import Word» Word32,«import Int» Int64,«import Word» Word64,Int,«import Word» Word,Integer
Eiffel,INTEGER_8,NATURAL_8,INTEGER_16,NATURAL_16,INTEGER_32,NATURAL_32,INTEGER_64,NATURAL_64,INTEGER,NATURAL,
COBOLCobol[h],BINARY-CHAR «SIGNED»,BINARY-CHAR UNSIGNED,BINARY-SHORT «SIGNED»,BINARY-SHORT UNSIGNED,BINARY-LONG «SIGNED»,BINARY-LONG UNSIGNED,BINARY-DOUBLE «SIGNED»,BINARY-DOUBLE UNSIGNED,,,
Mathematica,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,Integer,,,,,
Wolfram Language,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,colspan=2 ,Integer,,,,,
